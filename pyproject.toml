[project]
name = "company-researcher"
version = "0.1.0"
description = "Enhanced researcher agent with Meta Ad Intelligence that searches information about companies and returns structured analysis including advertising intelligence."
authors = [
    { name = "Vadym Barda" },
    { name = "Lance Martin" },
    { name = "Enhanced by Max & Jonas" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dependencies = [
    "langgraph>=0.2.52",
    "langsmith>=0.1.147",
    "langchain-community>=0.3.8",
    "tavily-python>=0.5.0",
    "langchain_anthropic>=0.3.0",
    "langchain_openai",
    "firecrawl-py",
    # Meta Ad Library API Dependencies
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    # Data Analysis for Ad Intelligence
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    # Enhanced JSON Schema Validation
    "jsonschema>=4.17.0",
    # Better Date/Time Handling for Ad Analysis
    "python-dateutil>=2.8.0",
    # Rate Limiting for API Calls
    "ratelimit>=2.2.1",
    # Enhanced Error Handling
    "tenacity>=8.2.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.11.1", 
    "ruff>=0.6.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0"
]
production = [
    # For real Meta API integration
    "facebook-business>=19.0.0",
    "facebook-sdk>=3.1.0"
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["agent"]
[tool.setuptools.package-dir]
"agent" = "src/agent"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = [
    "UP006",
    "UP007",
    "UP035",
    "D417",
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
"src/agent/meta_ad_client.py" = ["D", "T201"]  # Allow print statements in mock client

[tool.ruff.lint.pydocstyle]
convention = "google"

[dependency-groups]
dev = [
    "langgraph-cli[inmem]>=0.1.61",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]